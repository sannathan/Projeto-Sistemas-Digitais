module contador(
    input clk,
    output reg [7:0] data,      //verificar se é essa qtde de bits mesmo
    output reg EN, RS, RW
    );
    
initial begin
    EN = 1;
    RS = 0;
    RW = 0;
end


parameter ONEMS = 50000, HALFMS = 25000;
parameter WRITE = 1, WAIT = 0, FINAL = 10;                          //verificar depois pra confirmar se write é 0 mesmo
reg [31:0] counter = 0;                                 //procurar saber pq [31:0]
reg [1:0] state = WRITE;
reg [7:0] instructions = 0;

always@ (posedge clk) begin
    case(state)
		 WRITE: begin
			  if(counter == ONEMS) begin state <= WAIT; counter <= 0; EN <= 0; end
			  else counter <= counter + 1;
		 end
		 
		 WAIT: begin
		 if(counter == HALFMS) begin state <= WRITE; counter <= 0; EN <= 1; 
			if(instructions < FINAL) instructions <= instructions + 1;
		 end
		 
		 else counter <= counter + 1;
		 end
		 
    endcase
end

// Depois do contador, vem um always@ (*) pra imprimir os valores no LCD
always@ (*) begin
    case (instructions)
		0: begin data = 8'b00000001; RS = 0; end    //Limpar o display
		1: begin data = 8'b10000000; RS = 0; end    //Ir pra posição 0
		2: begin data = 8'b00110001; RS = 1; end //Printa 1
		3: begin data = 8'b00100000; RS = 1; end //Printa espaço
		4: begin data = 8'b00111111; RS = 1; end //Printa '?'
		5: begin data = 8'b00100000; RS = 1; end //Printa espaço
		6: begin data = 8'b00110010; RS = 1; end //Printa 2
		7: begin data = 8'b00111000; RS = 0; end//Cria segunda linha
  
      default: begin data = 8'b10000000; RS = 0; end //ir para a posição 0
    endcase
	end
	
endmodule 
